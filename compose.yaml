services:
  reverse-proxy:
    image: "traefik:v3.1"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - bridge

  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=Host(`api.localhost`) && PathPrefix(`/v1/users`)"
      - "traefik.http.services.user.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.user-strip-prefix.stripprefix.prefixes=/v1/users"
    networks:
      - bridge
    restart: unless-stopped

  user-db:
    image: postgres:16
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./services/user/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    networks:
      - bridge

  recipe-service:
    build:
      context: ./services/recipe
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.recipe.rule=Host(`api.localhost`) && PathPrefix(`/v1/recipes`)"
      - "traefik.http.services.recipe.loadbalancer.server.port=8082"
      - "traefik.http.middlewares.recipe-strip-prefix.stripprefix.prefixes=/v1/recipes"
    networks:
      - bridge
    restart: unless-stopped

  recipe-cache:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - bridge
    restart: unless-stopped

networks:
  bridge:
    driver: bridge
