services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  user-service:
    build:
      context: ./services/user
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-router.rule=PathPrefix(`/user`)"
      - "traefik.http.services.user-service.loadbalancer.server.port=3000"
      - "traefik.http.services.user-service.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.user-service.loadbalancer.healthcheck.interval=10s"
      - "traefik.http.services.user-service.loadbalancer.healthcheck.timeout=3s"

  user-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./services/user/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432" # Map port 5432 to access PostgreSQL from the host
